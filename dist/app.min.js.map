{"version":3,"sources":["app.js"],"names":["createError","require","express","cookieParser","path","usersRouter","addmodsRouter","indexRouter","app","set","join","__dirname","carRouter","use","json","extended","logger","urlencoded","next","err","req","res","locals","message","error","get","render"],"mappings":"aAAA,IAAIA,YAAcC,QAAQ,eACtBC,QAAUD,QAAQ,WADlBD,KAAAA,QAAcC,QAGdE,aAAeF,QAAQ,iBAFvBC,OAAOD,QAAU,UACjBG,YAAcH,QAAlB,kBAKII,YAAcJ,QAAQ,kBAJtBE,UAAYF,QAAGA,gBAMfK,cAAgBL,QAAQ,oBAHxBM,IAAAA,UASJC,IAAIC,IAAI,QAASL,KAAKM,KAAKC,UAAW,UAPtCH,IAAII,IAAAA,cAAmB,OACvBJ,IAAIF,IAAAA,OAAAA,QAUJE,IAAIK,IAAIX,QAAQY,QAPhBN,IAAIA,IAAGN,QAAGA,WAEV,CAAAa,UAAA,KAOAP,IAAIK,IAAIV,gBANRK,IAAIC,IAAIP,QAAR,OAAsBQ,KAAKC,KAAAA,UAAW,YAGtCH,IAAIK,IAAIG,IAAAA,aACRR,IAAIK,IAAIX,SAAQY,aAChBN,IAAIK,IAAIX,OAAQe,WAAaF,IAAAA,IAAAA,WAAUT,eAIvCE,IAAIK,IAAI,SAAKN,EAAAA,EAAbW,GACAV,EAAAR,YAAkBK,QAMlBG,IAAIK,IAAI,SAAAM,EAAAC,EAAAC,EAAAH,GAARG,EAIAC,OAAAC,QAAAJ,EAAAI,QAIEF,EAAIC,OAAOE,MAA+B,gBAAvBJ,EAAIZ,IAAIiB,IAAI,OAA2BN,EAAM,GADhEE,EAAIC,OAAOC,EAAAA,QAAcA,KACzBF,EAAIC,OAAOE,WAIXH,OAAIK,QAAOlB","file":"app.min.js","sourcesContent":["var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\nvar carRouter = require('./routes/car');\nvar addmodsRouter = require('./routes/addmods');\n\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/car', carRouter);\napp.use('/addmods', addmodsRouter);\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}