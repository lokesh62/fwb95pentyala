{"version":3,"sources":["app.js"],"names":["createError","require","express","cookieParser","path","usersRouter","addmodsRouter","logger","app","carRouter","__dirname","set","use","selectorRouter","urlencoded","extended","join","indexRouter","json","next","err","req","res","locals","message","error","get","status"],"mappings":"aAAA,IAAIA,YAAcC,QAAQ,eACtBC,QAAUD,QAAQ,WADlBD,KAAAA,QAAcC,QAGdE,aAAeF,QAAQ,iBAFvBC,OAAOD,QAAU,UACjBG,YAAcH,QAAlB,kBAKII,YAAcJ,QAAQ,kBAJtBE,UAAYF,QAAGA,gBAMfK,cAAgBL,QAAQ,oBALxBM,eAAiBN,QAAD,qBAShBO,IAAMN,UALVM,IAAIC,IAAAA,QAAYR,KAAAA,KAAQS,UAAD,UASvBF,IAAIG,IAAI,cAAe,OAEvBH,IAAII,IAAIL,OAAO,QATfC,IAAIK,IAAAA,QAAAA,QAWJL,IAAII,IAAIV,QAAQY,WAAW,CAAEC,UAAU,KARvCP,IAAIA,IAAGL,gBAUPK,IAAII,IAAIV,QAAO,OAAQE,KAAKY,KAAKN,UAAW,YAN5CF,IAAIG,IAAI,IAAAM,aAERT,IAAII,IAAIL,SAAOF,aACfG,IAAII,IAAIV,OAAQgB,WAChBV,IAAII,IAAIV,WAAQY,eAAaC,IAAAA,IAAAA,YAAUF,gBAIvCL,IAAII,IAAI,SAAKK,EAAAA,EAAbE,GACAX,EAAAR,YAAkBK,QAYlBG,IAAII,IAAI,SAASQ,EAAKC,EAAKC,EAAKH,GAJ9BA,EAAII,OAACvB,QAADoB,EAAJI,QADFF,EAIAC,OAAAE,MAAA,gBAAAJ,EAAAb,IAAAkB,IAAA,OAAAN,EAAA,GAEEE,EAAAK,OAAAP,EAAAO,QAAA,KACAL,EAAIC,OAAOC,WAIXF,OAAIK,QAAWA","file":"app.min.js","sourcesContent":["var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\nvar carRouter = require('./routes/car');\nvar addmodsRouter = require('./routes/addmods');\nvar selectorRouter = require('./routes/selector');\n\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/car', carRouter);\napp.use('/addmods', addmodsRouter);\napp.use('/selector', selectorRouter);\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}